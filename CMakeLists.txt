CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(PROJECT communicator)

PROJECT(${PROJECT})

MACRO(TODAY RESULT)
    IF (WIN32)
        EXECUTE_PROCESS(COMMAND "cmd" " /C date /T" OUTPUT_VARIABLE ${RESULT})
        STRING(REGEX REPLACE "(..).(..).(....).*" "\\1.\\2.\\3" ${RESULT} ${${RESULT}})
    ELSEIF(UNIX)
        EXECUTE_PROCESS(COMMAND "date" "+%d.%m.%Y %H:%M:%S" OUTPUT_VARIABLE ${RESULT})
        STRING(REGEX REPLACE "(..).(..).(....) (..):(..):(..).*" "\\1.\\2.\\3 \\4:\\5:\\6" ${RESULT} ${${RESULT}})
    ELSE (WIN32)
        MESSAGE(SEND_ERROR "date not implemented")
        SET(${RESULT} 000000)
    ENDIF (WIN32)
ENDMACRO(TODAY)

IF (NOT CMAKE_BUILD_TYPE)
    MESSAGE(STATUS "No build type selected, default to Release")
    SET(CMAKE_BUILD_TYPE "Release")
ENDIF()

SET(MAJOR_VERSION 0)
SET(MINOR_VERSION 1)
SET(PATCH_VERSION 0)
TODAY(BUILD_DATE)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

SET(Boost_USE_STATIC_LIBS ON)
SET(Boost_USE_MULTITHREADED ON)

INCLUDE(FindOracle)
INCLUDE(FindProtobuf)
INCLUDE(FindRabbitMQ)
INCLUDE(FindLog4cplus)

FIND_PACKAGE(Oracle)
FIND_PACKAGE(Threads)
FIND_PACKAGE(MongoDB)
FIND_PACKAGE(RabbitMQ)
FIND_PACKAGE(Protobuf REQUIRED)
FIND_PACKAGE(Log4cplus REQUIRED)
FIND_PACKAGE(Boost 1.49 COMPONENTS system thread filesystem program_options regex date_time chrono unit_test_framework REQUIRED)

SET(SOURCES ${SOURCES}
        main.cpp
        utils.cpp
        server.cpp
        client.cpp
        protocol_base.cpp
    )

SET(TESTS_SOURCES ${TESTS_SOURCES}
        test/params.cpp
    )

IF (${WIN32})
    
ELSE()
    SET(SOURCES ${SOURCES}
            daemon.cpp
        )
ENDIF()

INCLUDE(omnicomm/CMakeLists.txt)
INCLUDE(backends/CMakeLists.txt)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LOG4CPLUS_INCLUDE_DIRS})

IF (ORACLE_FOUND)
    INCLUDE_DIRECTORIES(${ORACLE_INCLUDE_DIRS})
ENDIF(ORACLE_FOUND)

IF (MongoDB_FOUND)
    INCLUDE_DIRECTORIES(${MongoDB_INCLUDE_DIR})
ENDIF(MongoDB_FOUND)

IF (RABBITMQ_FOUND)
    INCLUDE_DIRECTORIES(${RABBITMQ_INCLUDE_DIRS})
ENDIF(RABBITMQ_FOUND)

SET(CMAKE_CXX_FLAGS "-std=c++0x -O2 -Wall")

CONFIGURE_FILE(cmake/config.h.in ${CMAKE_SOURCE_DIR}/config.h)

SET(TEST test_${PROJECT})

IF (ORACLE_FOUND)
    SET(LIBRARIES ${LIBRARIES} ${ORACLE_LIBRARIES})
    SET(TEST_LIBRARIES ${TEST_LIBRARIES} ${ORACLE_LIBRARIES})
ENDIF(ORACLE_FOUND)

IF (MongoDB_FOUND)
    SET(LIBRARIES ${LIBRARIES} ${MongoDB_LIBRARIES})
ENDIF(MongoDB_FOUND)

IF (RABBITMQ_FOUND)
    SET(LIBRARIES ${LIBRARIES} ${RABBITMQ_LIBRARIES})
ENDIF(RABBITMQ_FOUND)

SET(LIBRARIES ${LIBRARIES}
        ${CMAKE_THREAD_LIBS_INIT}
        ${Boost_LIBRARIES}
        ${PROTOBUF_LIBRARY}
        ${LOG4CPLUS_LIBRARIES}
    )

ADD_EXECUTABLE(${PROJECT} ${SOURCES})
ADD_EXECUTABLE(${TEST} ${TESTS_SOURCES})

TARGET_LINK_LIBRARIES(${PROJECT} ${LIBRARIES})

SET(TEST_LIBRARIES ${TEST_LIBRARIES}
        ${Boost_LIBRARIES}
        ${LOG4CPLUS_LIBRARIES}
    )

TARGET_LINK_LIBRARIES(${TEST} ${TEST_LIBRARIES})

ENABLE_TESTING()
ADD_TEST(${TEST} ${TEST})

SET(CMAKE_INSTALL_PREFIX "${CMAKE_SOURCE_DIR}/bin")
INSTALL(TARGETS communicator DESTINATION .)
INSTALL(FILES log4cplus.config DESTINATION .)
